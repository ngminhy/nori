@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutNori.cshtml";
}

<section id="checkout-page" class="main-content">
<div class="container">
    <div class="row">
        <div class="col-md-3 col-md-push-9 col-sm-5 col-sm-push-7 col-xs-12 product_box">
            <h3>Đơn hàng</h3>
            <div class="alert alert-success" style="display:none" id="success-alert-cart">
                <strong>Thông báo! </strong>
                <span id="alert-content-cart"></span>
            </div>
            <table class="cart-view">
                @if (ViewBag.Cart.CartItems != null)
                {
                    var CartItems = (List<Biz4CMS.Models.Cart>)ViewBag.Cart.CartItems;
                    foreach (var item in CartItems)
                    {
                        <tr id="row-@item.RecordId">
                            <td>
                                <div class="product-name">
                                    <strong>@item.Product.Name</strong>
                                    <span>@item.ListCakeName</span>
                                </div>
                                <div>
                                    <strong>@item.ListCakeName</strong>
                                </div>
                                <div id="item-count-@item.RecordId">
                                    <input type="number" min="1" max="100" value="@item.Count" class="quantity">
                                    <span class="price"> x @string.Format("{0:0,0}", item.Price) VNĐ</span>
                                </div>
                            </td>
                            <td>
                                <a href="#" class="removeLink" data-id="@item.RecordId">
                                    <i class="glyphicon glyphicon-remove"></i>
                                </a>
                            </td>
                        </tr>
                    }
                }
                <tr>
                    <td colspan="2" class="footer-cart">
                        <b>Tổng cộng</b>
                        <div id="cart-total">@string.Format("{0:0,0}", ViewBag.Cart.CartTotal) VNĐ</div>
                    </td>
                </tr>
            </table>
        </div>
        <div class="col-md-9 col-md-pull-3 col-sm-7 col-sm-pull-5 col-xs-12">
            <div class="btn-group btn-toggle">
                <button class="btn btn-sm btn-default btn-delivery"><b>Giao hàng tận nơi</b> <br/> (Miễn phí với đơn hàng > 200K)</button>
                <button class="btn btn-sm btn-nori btn-no-delivery"><b>Mua mang về</b> <br/>(Nhận hàng tại cửa hàng)</button>
            </div>
            <form id="orderform" method="post" action="">
                <div class="form-group">
                   
                </div>
                <div class="form-group">
                    <label for="name">Họ và tên</label>
                    <input type="text" class="form-control" name="name" required>
                </div>
                <div class="form-group">
                    <label for="email">Email:</label>
                    <input type="email" class="form-control" name="email" required>
                </div>
                <div class="form-group">
                    <label for="phone">Số điện thoại:</label>
                    <input type="text" class="form-control" name="phone" required>
                </div>

                <div class="form-group" id="collapsible_address">
                    <label for="address">Địa chỉ:</label>
                    <input type="text" class="form-control" name="address" >
                </div>

                <div class="form-group" id="collapsible_address">
                    <label for="phuong">Phường:</label>
                    <input type="text" class="form-control" name="ward">
                </div>
                <div class="form-group" id="collapsible_address">
                    <label for="phuong">Quận:</label>
                    <select class="form-control" name="dist">
                        <option>Quận 1</option>
                        <option>Quận 2</option>
                        <option>Quận 3</option>
                        <option>Quận 4</option>
                        <option>Quận 5</option>
                        <option>Quận 6</option>
                        <option>Quận 7</option>
                        <option>Quận 8</option>
                        <option>Quận 9</option>
                        <option>Quận 10</option>
                        <option>Quận 11</option>
                        <option>Quận 12</option>
                        <option>Quận Thủ Đức</option>
                        <option>Quận Gò Vấp</option>
                        <option>Quận Bình Thạnh</option>
                        <option>Quận Tân Bình</option>
                        <option>Quận Tân Phú</option>
                        <option>Quận Phú Nhuận</option>                  
                        <option>Quận Bình Tân</option>
                        <option>Huyện Củ Chi</option>
                        <option>Huyện Hóc Môn</option>
                        <option>Huyện Bình Chánh</option>
                        <option>Huyện Nhà Bè</option>
                        <option>Huyện Cần Giờ</option>
                    </select>
                </div>
                <div class="form-group" id="collapsible_address">
                    <label for="phuong">Thành phố:</label>
                    <input type="text" class="form-control" name="city" value="Hồ Chí Minh">
                </div>
                <div class="form-group" id="collapsible">
                    <label for="branch">Cửa hàng Nori:</label>
                    <select class="form-control" name="branchname">
                        @foreach (var item in ViewBag.data)
                        {
                            <option value="@item.Address">@item.Address</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="bookingtime">Thời gian nhận hàng dự kiến:</label>
                    <select class="form-control" name="bookingtime">
                        <option>Now</option>
                        @{ 
                            var from = DateTime.Now.Hour + 1;
                            var to = 21;
                            var tstep = 30;

                        }
                        @for (var i = from; i <= to; i++)
                        {
                            <option>@i:00</option>
                            <option>@i:@tstep</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="note">Ghi chú:</label>
                    <textarea class="form-control" rows="2" name="note"></textarea>
                </div>
                <div class="checkbox">
                    <label><input type="checkbox"> Tôi chấp nhận <a href="/a/dieu-khoan-mua-hang">các điều khoản mua hàng</a></label>
                </div>
                <button type="submit" class="btn btn-sm btn-nori">Đăng ký</button>
                <div class="alert alert-success" style="display:none" id="success-alert">
                    
                    <strong>Thông báo! </strong>
                    <span id="alert-content"></span>
                </div>
            </form>
        </div>
    </div>
</div>
</section>

<script>
    function test(){
        if(!carryout){

        }
        else{
            savaData();
        }

    }
    function savaData(){
       

    }
    $( "#orderform" ).submit(function( event ) {
       
        var address = $('input[name=address').val();
        var ward = $('input[name=ward').val();
        var dist = $('select[name=dist').val();
        var city = $('input[name=city').val();
        var longaddress = address + " "+ward+" "+dist+" "+city;

        var url = 'http://maps.google.com/maps/api/geocode/json?address='+longaddress;
        var myLatlng=null;
        if(!carryout){
            event.preventDefault();
            $.ajax({
                url: url,
                type: 'GET',
                async: false,
                success : function(res) {
          
                    if(res.status =='OK'){
                        var latlng = res.results[0].geometry.location;
                        myLatlng = new google.maps.LatLng(latlng.lat,latlng.lng);
                        console.log(myLatlng)
                        console.log(myLatlng)
                        var check =false;
                        for(var i =0;i<arrPolyObj.length;i++){
                            console.log(arrPolyObj[i])
                            if(arrPolyObj[i].Contains(myLatlng) ){
                                check=true;
                                break;
                            }else
                            {
                                check=false;
                            }
                        }
                        if(!check){
                            showAlert('Hiện tại Nori Express chưa hỗ trợ giao hàng tại địa điểm này. Xin quý khách chọn điểm giao hàng khác.');

                            event.preventDefault();

                        }else{         
                            var form =  $("#orderform");
                            $.post("/order", $(form).serialize(), function (data) {
                                if (data.id != '') {
                                    location.href = "/shoppingcart/complete/" + data.id;
                                }
                            });
                        }
                    }else{
                        showAlert('Hiện tại Nori Express chưa hỗ trợ giao hàng tại địa điểm này. Xin quý khách chọn điểm giao hàng khác hoặc nhận thức ăn tại nhà hàng của Nori Express.');
                        event.preventDefault();
                    }
                }});

        }
        else{
            event.preventDefault();
            var form =  $("#orderform");
            $.post("/order", $(form).serialize(), function (data) {
                if (data.id != '') {
                    location.href = "/shoppingcart/complete/" + data.id;
                }
            });
        }
        
    });
  
    var carryout = true;

    function showAlert(content){
        $("#success-alert").alert();
        $('#alert-content').text(content);
        $("#success-alert").fadeTo(10000, 500).slideUp(800, function(){
            $("#success-alert").slideUp(800);
        });   
    }
    $("div[id=collapsible_address]").hide();
    $('.btn-toggle').click(function () {
        if ($(this).find('.btn-nori').hasClass('active')) {
            carryout=true;
            $("div[id=collapsible_address]").hide();
            $('#collapsible').show();
        }
        else {
            carryout = false;
            $("div[id=collapsible_address]").show();
            $('#collapsible').hide();
        }
        $(this).find('.btn').toggleClass('active');

        if ($(this).find('.btn-nori').size() > 0) {

            $(this).find('.btn').toggleClass('btn-nori');
        }

        $(this).find('.btn').toggleClass('btn-default');

    });

    var arrPolyObj;
    var myLatlng;
    var map;

    function initMap(){
        var listpoly = @Html.Raw(Json.Encode(@ViewBag.polyobj));

        google.maps.Polygon.prototype.Contains = function (point) {
            // ray casting alogrithm http://rosettacode.org/wiki/Ray-casting_algorithm
            var crossings = 0,
        path = this.getPath();

            // for each edge
            for (var i = 0; i < path.getLength() ; i++) {
                var a = path.getAt(i),
            j = i + 1;
                if (j >= path.getLength()) {
                    j = 0;
                }
                var b = path.getAt(j);
                if (rayCrossesSegment(point, a, b)) {
                    crossings++;
                }
            }

            // odd number of crossings?
            return (crossings % 2 == 1);

            function rayCrossesSegment(point, a, b) {
                var px = point.lng(),
                py = point.lat(),
                ax = a.lng(),
                ay = a.lat(),
                bx = b.lng(),
                by = b.lat();
                if (ay > by) {
                    ax = b.lng();
                    ay = b.lat();
                    bx = a.lng();
                    by = a.lat();
                }
                if (py == ay || py == by) py += 0.00000001;
                if ((py > by || py < ay) || (px > Math.max(ax, bx))) return false;
                if (px < Math.min(ax, bx)) return true;

                var red = (ax != bx) ? ((by - ay) / (bx - ax)) : Infinity;
                var blue = (ax != px) ? ((py - ay) / (px - ax)) : Infinity;
                return (blue >= red);
            }
        };

         arrPolyObj = [];
        for(var i =0;i<listpoly.length;i++){
            var arrFeatures = JSON.parse( listpoly[i].Polyobj).features;
            for(var j=0;j<arrFeatures.length;j++){
                var listCoordinates = arrFeatures[j].geometry.coordinates[0];
                var points =[];
                for(var k =0;k<listCoordinates.length;k++){
                    points.push(new google.maps.LatLng(listCoordinates[k][1],listCoordinates[k][0]));
                }

                var poly = new google.maps.Polygon({
                    path: points
                });
                poly.setMap(map)
                arrPolyObj.push(poly);
            }
        }

    }


</script>
<script>
    function showAlert(divid, idcontent, content) {
        $("#" + divid).alert();
        $('#' + idcontent).text(content);
        $("#" + divid).fadeTo(10000, 500).slideUp(800, function () {
            $("#" + divid).slideUp(800);
        });
    }
    function showDetail(productid) {
        $.get("/home/ProductDetail/" + productid, function (data) {
            console.log(data);
            $("#myProductDetail").html(data);
            $("#myModalDetail").modal('show');
        })
    }
    $(function () {

        $(".quantity").change(function () {
            var rlist = [];
            var qlist = [];
            $(".removeLink").each(function () {
                rlist.push($(this).attr("data-id"));
            });
            $(".quantity").each(function () {
                qlist.push($(this).val());
            });
            if (rlist.length > 0) {
                // Perform the ajax post
                $.post("/ShoppingCart/UpdateCart", $.param({ "rlist": rlist, "qlist": qlist }, true),
                    function (data) {
                        // Successful requests get here
                        // Update the page elements
                        var total = data.CartTotal.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        $('#cart-total').text(total);
                        $('#carttotal').text(data.CartTotal);
                        //$('#update-message').text(data.Message);
                        showAlert("success-alert-cart", "alert-content-cart", data.Message);
                        $('#cart-status').text(data.CartCount);
                    });
            }
        });

        $('#submit').click(function () {
            var total = $('#carttotal').text();
            if (total == "0" || total == undefined) {
                showAlert("success-alert-cart", "alert-content-cart", "Chọn sản phẩm trước khi thanh toán.");

            } else {
                //$.post("/ShoppingCart", { "total": total }, function (data) {
                //    if (data.id != '') {
                //        location.href = "/shoppingcart/complete/" + data.id;
                //    }
                //});
                location.href = "/order";
            }

        });

        $(".removeLink").click(function () {
            // Get the id from the link
            var recordToDelete = $(this).attr("data-id");
            if (recordToDelete != '') {
                // Perform the ajax post
                $.post("/ShoppingCart/RemoveFromCart", { "id": recordToDelete },
                    function (data) {
                        // Successful requests get here
                        // Update the page elements
                        if (data.ItemCount == 0) {
                            $('#row-' + data.DeleteId).fadeOut('slow');
                        } else {
                            $('#item-count-' + data.DeleteId).text(data.ItemCount);
                        }
                        $('#cart-total').text(data.CartTotal);
                        $('#carttotal').text(data.CartTotal);
                        //$('#update-message').text(data.Message);
                        showAlert("success-alert-cart", "alert-content-cart", data.Message);
                        $('#cart-status').text(data.CartCount);
                    });
            }
        });

        var MaxFiller = $("#MaxFiller").val();
        var ProductId = $("#ProductId").val();
        var prouctPrice = $("#ProductPrice").val();
        $("#maxchoise").text("Tối đa: " + MaxFiller);
        function updateCounter(chk) {
            var len = $("input[name='chkCakeFiller[]']:checked").length;

            if (len > MaxFiller) {
                chk.checked = false;
                showAlert("success-alert-cake", "alert-content-cake", 'Bạn đã chọn tối đa số nhân quy định!');
            }
        }

        $("#cake tr").click(function (event) {
            if (event.target.type !== 'checkbox') {
                $(':checkbox', this).trigger('click');
            }
        })

        $("input[name='chkCakeFiller[]']").on("change", function () {
            updateCounter(this);
        });
        $("#addCakeFiller").click(function () {
            var chkCake = $("input[name='chkCakeFiller[]']:checked").map(function (_, el) {
                return $(el).val();
            }).get();

            var chkCakeName = $("input[name='chkCakeFiller[]']:checked").map(function (_, el) {
                return $(el).attr("data-name");
            }).get();

            var chkCakePrice = $("input[name='chkCakeFiller[]']:checked").map(function (_, el) {
                return $(el).attr("data-price");
            }).get();

            var price = parseInt(prouctPrice);
            $.each(chkCakePrice, function () {
                price += parseInt(this);
            });

            $.get("/ShoppingCart/AddToCart/" + ProductId + "?listCakeFiller=" + chkCake + "&listCakeName=" + chkCakeName + "&price=" + price, function (data) {
                $('#myModal').modal('toggle');
                location.href = "/Product";
            });


        })
    })
</script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDQ0pDRDKSyAO4lm10ttEXa2_uoZmWQzHc&v=3.exp&sensor=false&callback=initMap"></script>

