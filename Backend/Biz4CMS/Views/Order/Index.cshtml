@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutNori.cshtml";
}

<section class="main-content">
<div class="container">
    <div class="row" style="position: relative; padding-top:10px; padding-bottom:10px;">
        <div class="col-md-8">
          
            <div class="btn-group btn-toggle">
                <button class="btn btn-lg btn-default">Giao hàng</button>
                <button class="btn btn-lg btn-nori ">Mua mang đi</button>
            </div>
            
            <form id="orderform" method="post" action="/Order">
                <div class="form-group">
                   
                </div>
                <div class="form-group">
                    <label for="name">Họ và tên</label>
                    <input type="text" class="form-control" name="name" required>
                </div>
                <div class="form-group">
                    <label for="email">Email:</label>
                    <input type="email" class="form-control" name="email" required>
                </div>
                <div class="form-group">
                    <label for="phone">Số điện thoại:</label>
                    <input type="text" class="form-control" name="phone" required>
                </div>
                <div class="form-group" id="collapsible_address">
                    <label for="address">Địa chỉ:</label>
                    <input type="text" class="form-control" name="address" >
                </div>

                <div class="form-group" id="collapsible_address">
                    <label for="phuong">Phường:</label>
                    <input type="text" class="form-control" name="ward">
                </div>
                <div class="form-group" id="collapsible_address">
                    <label for="phuong">Quận:</label>
                    <select class="form-control" name="dist">
                        <option>Quận 1</option>
                        <option>Quận 2</option>
                        <option>Quận 3</option>
                        <option>Quận 4</option>
                        <option>Quận 5</option>
                        <option>Quận 6</option>
                        <option>Quận 7</option>
                        <option>Quận 8</option>
                        <option>Quận 9</option>
                        <option>Quận 10</option>
                        <option>Quận 11</option>
                        <option>Quận 12</option>
                        <option>Quận Thủ Đức</option>
                        <option>Quận Gò Vấp</option>
                        <option>Quận Bình Thạnh</option>
                        <option>Quận Tân Bình</option>
                        <option>Quận Tân Phú</option>
                        <option>Quận Phú Nhuận</option>                  
                        <option>Quận Bình Tân</option>
                        <option>Huyện Củ Chi</option>
                        <option>Huyện Hóc Môn</option>
                        <option>Huyện Bình Chánh</option>
                        <option>Huyện Nhà Bè</option>
                        <option>Huyện Cần Giờ</option>
                    </select>
                </div>
                <div class="form-group" id="collapsible_address">
                    <label for="phuong">Thành phố:</label>
                    <input type="text" class="form-control" name="city" value="Hồ Chí Minh">
                </div>
                <div class="form-group" id="collapsible">
                    <label for="branch">Cửa hàng Nori:</label>
                    <select class="form-control" name="branchname">
                        @foreach (var item in ViewBag.data)
                        {
                            <option value="@item.Address">@item.Address</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="bookingtime">Thời gian nhận hàng dự kiến:</label>
                    <select class="form-control" name="bookingtime">
                        <option>Now</option>
                        @{ 
                            var from = DateTime.Now.Hour + 1;
                            var to = 21;
                            var tstep = 30;

                        }
                        @for (var i = from; i <= to; i++)
                        {
                            <option>@i:00</option>
                            <option>@i:@tstep</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="note">Ghi chú:</label>
                    <textarea class="form-control" rows="2" name="note"></textarea>
                </div>
                <div class="checkbox">
                    <label><input type="checkbox"> Tôi chấp nhận <a href="#"></a>TERMS AND CONDITIONS</a></label>
                </div>
                <button type="submit" class="btn btn-lg btn-nori">Đăng ký</button>
                <div class="alert alert-success" style="display:none" id="success-alert">
                    
                    <strong>Thông báo! </strong>
                    <span id="alert-content"></span>
                </div>
</form>
        </div>
        @{Html.RenderAction("RightBox", "Home");}
    </div>
</div>
</section>

<script>
    function test(){
        if(!carryout){

        }
        else{
            savaData();
        }

    }
    function savaData(){
       

    }
    $( "#orderform" ).submit(function( event ) {
       
        var address = $('input[name=address').val();
        var ward = $('input[name=ward').val();
        var dist = $('select[name=dist').val();
        var city = $('input[name=city').val();
        var longaddress = address + " "+ward+" "+dist+" "+city;

        var url = 'http://maps.google.com/maps/api/geocode/json?address='+longaddress;
        var myLatlng=null;
        if(!carryout){
            //event.preventDefault();
            $.ajax({
                url: url,
                type: 'GET',
                async: false,
                success : function(res) {
          
                    if(res.status =='OK'){
                        var latlng = res.results[0].geometry.location;
                        myLatlng = new google.maps.LatLng(latlng.lat,latlng.lng);
                        console.log(myLatlng)
                        console.log(myLatlng)
                        var check =false;
                        for(var i =0;i<arrPolyObj.length;i++){
                            console.log(arrPolyObj[i])
                            if(arrPolyObj[i].Contains(myLatlng) ){
                                check=true;
                                break;
                            }else
                            {
                                check=false;
                            }
                        }
                        if(!check){
                            showAlert('Hiện tại không hỗ trợ giao hàng tại địa điểm này.');

                            event.preventDefault();

                        }else{         
                            var form =  $("#orderform");
                            $.ajax({
                                url: form.action,
                                type: form.method,
                                data: $(form).serialize(),
                                then: function(response) {
                                    location.href = "/product";
                                }            
                            });
                        }
                    }else{
                        showAlert('Hiện tại không hỗ trợ giao hàng tại địa điểm này.');
                        event.preventDefault();
                    }
                }});

        }
        else{
            var form =  $("#orderform");
            $.ajax({
                url: form.action,
                type: form.method,
                data: $(form).serialize(),
                then: function(response) {
                    location.href = "/product";
                }            
            });
        }
        
    });
  
    var carryout = true;

    function showAlert(content){
        $("#success-alert").alert();
        $('#alert-content').text(content);
        $("#success-alert").fadeTo(5000, 500).slideUp(800, function(){
            $("#success-alert").slideUp(800);
        });   
    }
    $("div[id=collapsible_address]").hide();
    $('.btn-toggle').click(function () {
        if ($(this).find('.btn-nori').hasClass('active')) {
            carryout=true;
            $("div[id=collapsible_address]").hide();
            $('#collapsible').show();
        }
        else {
            carryout = false;
            $("div[id=collapsible_address]").show();
            $('#collapsible').hide();
        }
        $(this).find('.btn').toggleClass('active');

        if ($(this).find('.btn-nori').size() > 0) {

            $(this).find('.btn').toggleClass('btn-nori');
        }

        $(this).find('.btn').toggleClass('btn-default');

    });

    var arrPolyObj;
    var myLatlng;
    var map;

    function initMap(){
        var listpoly = @Html.Raw(Json.Encode(@ViewBag.polyobj));

        google.maps.Polygon.prototype.Contains = function (point) {
            // ray casting alogrithm http://rosettacode.org/wiki/Ray-casting_algorithm
            var crossings = 0,
        path = this.getPath();

            // for each edge
            for (var i = 0; i < path.getLength() ; i++) {
                var a = path.getAt(i),
            j = i + 1;
                if (j >= path.getLength()) {
                    j = 0;
                }
                var b = path.getAt(j);
                if (rayCrossesSegment(point, a, b)) {
                    crossings++;
                }
            }

            // odd number of crossings?
            return (crossings % 2 == 1);

            function rayCrossesSegment(point, a, b) {
                var px = point.lng(),
                py = point.lat(),
                ax = a.lng(),
                ay = a.lat(),
                bx = b.lng(),
                by = b.lat();
                if (ay > by) {
                    ax = b.lng();
                    ay = b.lat();
                    bx = a.lng();
                    by = a.lat();
                }
                if (py == ay || py == by) py += 0.00000001;
                if ((py > by || py < ay) || (px > Math.max(ax, bx))) return false;
                if (px < Math.min(ax, bx)) return true;

                var red = (ax != bx) ? ((by - ay) / (bx - ax)) : Infinity;
                var blue = (ax != px) ? ((py - ay) / (px - ax)) : Infinity;
                return (blue >= red);
            }
        };

         arrPolyObj = [];
        for(var i =0;i<listpoly.length;i++){
            var arrFeatures = JSON.parse( listpoly[i].Polyobj).features;
            for(var j=0;j<arrFeatures.length;j++){
                var listCoordinates = arrFeatures[j].geometry.coordinates[0];
                var points =[];
                for(var k =0;k<listCoordinates.length;k++){
                    points.push(new google.maps.LatLng(listCoordinates[k][1],listCoordinates[k][0]));
                }

                var poly = new google.maps.Polygon({
                    path: points
                });
                poly.setMap(map)
                arrPolyObj.push(poly);
            }
        }

    }


</script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDQ0pDRDKSyAO4lm10ttEXa2_uoZmWQzHc&v=3.exp&sensor=false&callback=initMap"></script>

